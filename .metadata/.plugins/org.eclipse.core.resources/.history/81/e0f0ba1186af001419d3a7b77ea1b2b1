package com.iiitb.utility;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import com.iiitb.blocks.Block;
import com.iiitb.cfg.Accfg;
import com.iiitb.sort.TopologicalSort;

public class MergeAccfg {

	// Perform topological sort . For now this is hardcoded
	// FP is set here
	public static Accfg merge(ArrayList<Block> blockList,
			ArrayList<String> sortedList) {

		Accfg merged = null;
		List<String> fpList = new ArrayList<String>();

		merged = new Accfg();
		
		System.out.println("sorted List "+sortedList);
		System.out.println("Block List "+blockList);
		
		/*
		 * // Topological sort TopologicalSort ts = new TopologicalSort();
		 * ArrayList<String> sortedList =
		 * ts.sortGraph(FetchInputFromLine.adjacencyList);
		 */
		/*
		 * while (iter.hasNext()) {
		 * 
		 * Block block = (Block) iter.next(); if
		 * (block.getAccfg().getInput().isEmpty()) {
		 * fpList.addAll(block.getAccfg().getFp());
		 * 
		 * } else continue;
		 * 
		 * }
		 * 
		 * iter = blockList.iterator(); while (iter.hasNext()) { Block block =
		 * (Block) iter.next(); if
		 * (block.getName().equalsIgnoreCase(Constants.SUM)) {
		 * 
		 * fpList.addAll(block.getAccfg().getFp());
		 * 
		 * }
		 * 
		 * }
		 */

		Iterator sortedIter = sortedList.iterator();
		
		String sortFp = "";

		while (sortedIter.hasNext()) {
			sortFp = (String) sortedIter.next();
			System.out.println("Test in merge1 "+sortFp);
			Iterator iter = blockList.iterator();
			while (iter.hasNext()) {
				Block block = (Block) iter.next();
				System.out.println("Test in merge2 "+block.getName());
				
				if (block.getName().equalsIgnoreCase(sortFp)) {
					fpList.addAll(block.getAccfg().getFp());
					iter.remove();
					break;
				}

			}

		}

		merged.setFp(fpList);

		// Call to set input and output
		merged = findInputOutputVariable(merged, blockList);

		// System.out.println(merged);
		return merged;

	}

	// Set input and output for merged ACCFG
	public static Accfg findInputOutputVariable(Accfg accfg,
			ArrayList<Block> blockList) {

		List<String> input = new ArrayList<String>();
		List<String> output = new ArrayList<String>();

		Iterator blockListIter = blockList.iterator();
		while (blockListIter.hasNext()) {
			Block block = (Block) blockListIter.next();
			input.addAll(block.getAccfg().getInput());
			output.add(block.getAccfg().getOutput());

		}

		// System.out.println(input);
		// System.out.println(output);

		Iterator inputIter = input.iterator();
		String inputVar = "";
		String outputVar = "";
		while (inputIter.hasNext()) {
			inputVar = (String) inputIter.next();
			Iterator outputIter = output.iterator();

			while (outputIter.hasNext()) {

				outputVar = (String) outputIter.next();

				if (inputVar.equalsIgnoreCase(outputVar)) {
					inputIter.remove();
					outputIter.remove();
				}

				break;

			}

		}

		accfg.setInput(input);
		if(output.size()!=0)
		accfg.setOutput(output.get(0));

		return accfg;
	}

}
