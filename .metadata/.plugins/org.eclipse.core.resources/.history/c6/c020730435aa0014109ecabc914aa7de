package com.iiitb.utility;


import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import com.iiitb.blocks.Accfg;
import com.iiitb.blocks.Block;

public class MergeAccfg {
	
	// Perform topological sort . For now this is hardcoded
	
	public static Accfg merge(ArrayList<Block> blockList)
	{
		
		Accfg merged =null;
		List<String> fpList =null;
		Iterator iter = blockList.iterator();
		merged = new Accfg();
		fpList = new ArrayList<String>();
		while(iter.hasNext())
		{
			
			Block block = (Block)iter.next();
			if(block.getAccfg().getInput().isEmpty())
			{
				System.out.println("test "+fpList.addAll(block.getAccfg().getFp()));
				System.out.println("size "+fpList.size());
			}
			else
				continue;
			
		}
		
		iter = blockList.iterator();
		while(iter.hasNext())
		{
			Block block = (Block)iter.next();
			if(block.getName().equalsIgnoreCase("Sum"))
			{
				System.out.println();
				System.out.println("test123 "+fpList.addAll(block.getAccfg().getFp()));
				System.out.println("size "+fpList.size());
			}
			
			
		}
		
		
		merged.setFp(fpList);
		merged = findInputOutputVariable(merged,blockList);
		System.out.println("Success "+merged.getFp());
		return merged;
		
		
		
		
	}
	
	
	// Set input and output for merged ACCFG
	public static Accfg findInputOutputVariable(Accfg accfg , ArrayList<Block> blockList)
	{
		
		return null;
	}
	
	

}
