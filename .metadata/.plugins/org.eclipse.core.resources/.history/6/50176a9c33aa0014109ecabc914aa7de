package com.iiitb.utility;


import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import com.iiitb.blocks.Accfg;
import com.iiitb.blocks.Block;

public class MergeAccfg {
	
	// Perform topological sort . For now this is hardcoded
	
	public static Accfg merge(ArrayList<Block> blockList)
	{
		
		Accfg merged =null;
		List<String> fpList =null;
		Iterator iter = blockList.iterator();
		while(iter.hasNext())
		{
			merged = new Accfg();
			fpList = new ArrayList<String>();
			Block block = (Block)iter.next();
			if(block.getAccfg().getInput().isEmpty())
			{
				System.out.println("test "+fpList.addAll(block.getAccfg().getFp()));
			}
			else
				continue;
			
		}
		
		iter = blockList.iterator();
		while(iter.hasNext())
		{
			Block block = (Block)iter.next();
			if(block.getName().equalsIgnoreCase("Sum"))
			{
				fpList.addAll(block.getAccfg().getFp());
				
			}
			
			
		}
		
		
		merged.setFp(fpList);
		
		System.out.println("Success "+merged.getFp());
		return null;
		
		
		
		
	}
	
	
	
	public static void findInputOutputVariable()
	{
		
		
	}
	
	

}
