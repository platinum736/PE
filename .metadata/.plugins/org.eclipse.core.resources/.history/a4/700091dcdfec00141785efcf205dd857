package com.iiitb.factory;

import static org.junit.Assert.*;

import java.util.ArrayList;
import java.util.List;

import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;
import org.w3c.dom.NodeList;

import com.iiitb.blocks.Block;
import com.iiitb.blocks.Constant;
import com.iiitb.blocks.Delay;
import com.iiitb.blocks.Sum;
import com.iiitb.blocks.Switch;
import com.iiitb.constant.Constants;
import com.iiitb.utility.BlockFactoryUtility;

public class BlockFactoryTest {

	@BeforeClass
	public static void setUpBeforeClass() throws Exception {
	}

	@AfterClass
	public static void tearDownAfterClass() throws Exception {
	}

	@Before
	public void setUp() throws Exception {
	}

	@After
	public void tearDown() throws Exception {
	}

	@Test
	public Block testGenerateBlockStringNodeList(String blockName , NodeList attributes) {
		Block block = null;
		if (blockName.startsWith(Constants.CONST)) {
			block = new Constant(blockName.split("_", 2)[1]);
			
			List<String> attrFetchList = new ArrayList<String>(); 
			attrFetchList.add(Constants.VALUE);
			
			
			BlockFactoryUtility.setBlockAttributes(attrFetchList, attributes,
					block);

		}

		if (blockName.startsWith(Constants.SUM)) {
			block = new Sum(blockName.split("_", 2)[1]);
			
			List<String> attrFetchList = new ArrayList<String>(); 
			attrFetchList.add(Constants.INPUT);
			
			BlockFactoryUtility.setBlockAttributes(attrFetchList, attributes,
					block);

		}
		
		if (blockName.startsWith(Constants.DELAY)) {
			
			System.out.println("Entered for delay step1");
			
			block = new Delay(blockName.split("_", 2)[1]);
			List<String> attrFetchList = new ArrayList<String>(); 
			attrFetchList.add(Constants.IC);
			attrFetchList.add(Constants.DELAY_LENGTH);
			
			BlockFactoryUtility.setBlockAttributes(attrFetchList, attributes,
					block);

		}
		
	if (blockName.startsWith(Constants.SWITCH)) {
			
			System.out.println("Entered for switch step1");
			
			block = new Switch(blockName.split("_", 2)[1]);
			
			List<String> attrFetchList = new ArrayList<String>(); 
			attrFetchList.add(Constants.CRITERIA);
			attrFetchList.add(Constants.THRESHOLD);
			
			BlockFactoryUtility.setBlockAttributes(attrFetchList, attributes,
					block);

		}
		return block;

		
		
		
	}

	@Test
	public void testGenerateBlockStringAccfg() {
		fail("Not yet implemented");
	}

}
